{"ast":null,"code":"var _jsxFileName = \"/Users/fadliselaz/react/react-context-hook/src/components/Navbar.js\";\nimport React, { Component } from 'react';\nimport { ThemeContext } from '../contexts/ThemeContext';\n\nclass Navbar extends Component {\n  // contextType menentukan context mana yang dipakai\n  render() {\n    // dan akan menghasilkan sebuag object bernama context\n    console.log('context => ', this.context); // ini akan membuat sebuah variable baru sesuai dengan\n    // yang ada di state file ThemeCOntext\n\n    const {\n      isLightTheme,\n      light,\n      dark,\n      user\n    } = this.context; // kita buat sebuah variable baru bernama theme\n    // jika LightTheme true dan false\n\n    const theme = isLightTheme ? light : dark; // variable theme akan berubah menjadi light atau dark\n    // tergantung true atau falsenya\n\n    return React.createElement(ThemeContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, () => {\n      const {\n        isLightTheme,\n        light,\n        dark,\n        user\n      } = this.context;\n      const theme = isLightTheme ? light : dark;\n      return React.createElement(\"nav\", {\n        style: {\n          // bisa kita gunakan untuk display\n          background: theme.ui,\n          color: theme.syntax\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Context App\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Home\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"About\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Contact\")));\n    });\n  }\n\n}\n\nNavbar.contextType = ThemeContext;\nexport default Navbar;","map":{"version":3,"sources":["/Users/fadliselaz/react/react-context-hook/src/components/Navbar.js"],"names":["React","Component","ThemeContext","Navbar","render","console","log","context","isLightTheme","light","dark","user","theme","background","ui","color","syntax","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAE3B;AAGAG,EAAAA,MAAM,GAAG;AACL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKC,OAAhC,EAFK,CAIL;AACA;;AACA,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA,KAAhB;AAAuBC,MAAAA,IAAvB;AAA6BC,MAAAA;AAA7B,QAAsC,KAAKJ,OAAjD,CANK,CAQL;AACA;;AACA,UAAMK,KAAK,GAAGJ,YAAY,GAAGC,KAAH,GAAWC,IAArC,CAVK,CAWL;AACA;;AAEA,WACI,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,MAAM;AAC1B,YAAM;AAAEF,QAAAA,YAAF;AAAgBC,QAAAA,KAAhB;AAAuBC,QAAAA,IAAvB;AAA6BC,QAAAA;AAA7B,UAAsC,KAAKJ,OAAjD;AAEA,YAAMK,KAAK,GAAGJ,YAAY,GAAGC,KAAH,GAAWC,IAArC;AAEA,aACI;AAAK,QAAA,KAAK,EAAE;AACR;AACAG,UAAAA,UAAU,EAAED,KAAK,CAACE,EAFV;AAGRC,UAAAA,KAAK,EAAEH,KAAK,CAACI;AAHL,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CAPJ,CADJ;AAeH,KApBD,CADJ;AA4BH;;AA/C0B;;AAAzBb,M,CAGKc,W,GAAcf,Y;AA+CzB,eAAeC,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport { ThemeContext } from '../contexts/ThemeContext';\n\nclass Navbar extends Component {\n\n    // contextType menentukan context mana yang dipakai\n    static contextType = ThemeContext\n\n    render() {\n        // dan akan menghasilkan sebuag object bernama context\n        console.log('context => ', this.context);\n\n        // ini akan membuat sebuah variable baru sesuai dengan\n        // yang ada di state file ThemeCOntext\n        const { isLightTheme, light, dark, user } = this.context\n\n        // kita buat sebuah variable baru bernama theme\n        // jika LightTheme true dan false\n        const theme = isLightTheme ? light : dark\n        // variable theme akan berubah menjadi light atau dark\n        // tergantung true atau falsenya\n\n        return (\n            <ThemeContext.Consumer>{() => {\n                const { isLightTheme, light, dark, user } = this.context\n\n                const theme = isLightTheme ? light : dark\n\n                return (\n                    <nav style={{\n                        // bisa kita gunakan untuk display\n                        background: theme.ui,\n                        color: theme.syntax,\n\n                    }}>\n                        <h1>Context App</h1>\n                        <ul>\n                            <li>Home</li>\n                            <li>About</li>\n                            <li>Contact</li>\n                        </ul>\n                    </nav>\n                )\n            }}\n\n\n\n            </ThemeContext.Consumer>\n\n        );\n    }\n}\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}