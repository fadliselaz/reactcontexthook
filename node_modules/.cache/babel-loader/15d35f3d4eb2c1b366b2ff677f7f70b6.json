{"ast":null,"code":"var _jsxFileName = \"/Users/fadliselaz/react/react-context-hook/src/components/Navbar.js\";\nimport React, { Component } from 'react';\nimport { ThemeContext } from '../contexts/ThemeContext';\nimport { AuthContext } from '../contexts/AuthContext';\n\nclass Navbar extends Component {\n  // contextType menentukan context mana yang dipakai\n  // static contextType = ThemeContext\n  render() {\n    // dan akan menghasilkan sebuag object bernama context\n    // console.log('context => ', this.context);\n    // ini akan membuat sebuah variable baru sesuai dengan\n    // yang ada di state file ThemeCOntext\n    // const { isLightTheme, light, dark, user } = this.context\n    // kita buat sebuah variable baru bernama theme\n    // jika LightTheme true dan false\n    // const theme = isLightTheme ? light : dark\n    // variable theme akan berubah menjadi light atau dark\n    // tergantung true atau falsenya\n    return React.createElement(AuthContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, authContext => React.createElement(ThemeContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, themeContext => {\n      const {\n        isLightTheme,\n        light,\n        dark\n      } = themeContext;\n      const theme = isLightTheme ? light : dark;\n      return React.createElement(\"nav\", {\n        style: {\n          // bisa kita gunakan untuk display\n          background: theme.ui,\n          color: theme.syntax\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Context App\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Home\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"About\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Contact\")));\n    }));\n  }\n\n}\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/fadliselaz/react/react-context-hook/src/components/Navbar.js"],"names":["React","Component","ThemeContext","AuthContext","Navbar","render","authContext","themeContext","isLightTheme","light","dark","theme","background","ui","color","syntax"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAE3B;AACA;AAEAI,EAAAA,MAAM,GAAG;AACL;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,WAEI,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBC,WAAD,IAEnB,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBC,YAAD,IAAkB;AAEtC,YAAM;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA,KAAhB;AAAuBC,QAAAA;AAAvB,UAAgCH,YAAtC;AACA,YAAMI,KAAK,GAAGH,YAAY,GAAGC,KAAH,GAAWC,IAArC;AAEA,aACI;AAAK,QAAA,KAAK,EAAE;AACR;AACAE,UAAAA,UAAU,EAAED,KAAK,CAACE,EAFV;AAGRC,UAAAA,KAAK,EAAEH,KAAK,CAACI;AAHL,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CAPJ,CADJ;AAeH,KApBD,CAFJ,CAFJ;AAiCH;;AApD0B;;AAuD/B,eAAeX,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport { ThemeContext } from '../contexts/ThemeContext';\nimport { AuthContext } from '../contexts/AuthContext';\n\nclass Navbar extends Component {\n\n    // contextType menentukan context mana yang dipakai\n    // static contextType = ThemeContext\n\n    render() {\n        // dan akan menghasilkan sebuag object bernama context\n        // console.log('context => ', this.context);\n\n        // ini akan membuat sebuah variable baru sesuai dengan\n        // yang ada di state file ThemeCOntext\n        // const { isLightTheme, light, dark, user } = this.context\n\n        // kita buat sebuah variable baru bernama theme\n        // jika LightTheme true dan false\n        // const theme = isLightTheme ? light : dark\n        // variable theme akan berubah menjadi light atau dark\n        // tergantung true atau falsenya\n\n        return (\n\n            <AuthContext.Consumer>{(authContext) => (\n\n                <ThemeContext.Consumer>{(themeContext) => {\n\n                    const { isLightTheme, light, dark } = themeContext\n                    const theme = isLightTheme ? light : dark\n\n                    return (\n                        <nav style={{\n                            // bisa kita gunakan untuk display\n                            background: theme.ui,\n                            color: theme.syntax,\n\n                        }}>\n                            <h1>Context App</h1>\n                            <ul>\n                                <li>Home</li>\n                                <li>About</li>\n                                <li>Contact</li>\n                            </ul>\n                        </nav>\n                    )\n                }}\n                </ThemeContext.Consumer>\n            )}\n\n\n            </AuthContext.Consumer>\n\n\n        );\n    }\n}\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}