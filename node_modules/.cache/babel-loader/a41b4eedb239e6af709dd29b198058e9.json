{"ast":null,"code":"var _jsxFileName = \"/Users/fadliselaz/react/react-context-hook/src/components/Navbar.js\";\nimport React, { useContext } from 'react';\nimport { ThemeContext } from '../contexts/ThemeContext';\nimport { AuthContext } from '../contexts/AuthContext';\nimport Loged from './Loged'; // class Navbar extends Component {\n//     // contextType menentukan context mana yang dipakai\n//     // static contextType = ThemeContext\n//     render() {\n//         // dan akan menghasilkan sebuag object bernama context\n//         // console.log('context => ', this.context);\n//         // ini akan membuat sebuah variable baru sesuai dengan\n//         // yang ada di state file ThemeCOntext\n//         // const { isLightTheme, light, dark, user } = this.context\n//         // kita buat sebuah variable baru bernama theme\n//         // jika LightTheme true dan false\n//         // const theme = isLightTheme ? light : dark\n//         // variable theme akan berubah menjadi light atau dark\n//         // tergantung true atau falsenya\n//         return (\n//             <AuthContext.Consumer>{(authContext) => (\n//                 <ThemeContext.Consumer>{(themeContext) => {\n//                     const { isLightTheme, light, dark } = themeContext\n//                     const theme = isLightTheme ? light : dark\n//                     const { isAuthenticated, toggleAuth } = authContext\n//                     return (\n//                         <nav style={{\n//                             // bisa kita gunakan untuk display\n//                             background: theme.ui,\n//                             color: theme.syntax,\n//                         }}>\n//                             <h1>Context App</h1>\n//                             <div onClick={toggleAuth}>\n//                                 {isAuthenticated ? 'loged in' : 'loged Out'}\n//                             </div>\n//                             <ul>\n//                                 <li>Home</li>\n//                                 <li>About</li>\n//                                 <li>Contact</li>\n//                             </ul>\n//                             {/* <Loged /> */}\n//                         </nav>\n//                     )\n//                 }}\n//                 </ThemeContext.Consumer>\n//             )}\n//             </AuthContext.Consumer>\n//         );\n//     }\n// }\n\nconst Navbar = () => {\n  const {\n    isLightTheme,\n    light,\n    dark\n  } = useContext(ThemeContext);\n  const {\n    isAuthenticated,\n    toggleAuth\n  } = useContext(AuthContext);\n  return React.createElement(\"nav\", {\n    style: {\n      // bisa kita gunakan untuk display\n      background: theme.ui,\n      color: theme.syntax\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Context App\"), React.createElement(\"div\", {\n    onClick: toggleAuth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, isAuthenticated ? 'loged in' : 'loged Out'), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Home\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"About\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Contact\")));\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/fadliselaz/react/react-context-hook/src/components/Navbar.js"],"names":["React","useContext","ThemeContext","AuthContext","Loged","Navbar","isLightTheme","light","dark","isAuthenticated","toggleAuth","background","theme","ui","color","syntax"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,MAAgCP,UAAU,CAACC,YAAD,CAAhD;AACA,QAAM;AAAEO,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAkCT,UAAU,CAACE,WAAD,CAAlD;AACA,SACI;AAAK,IAAA,KAAK,EAAE;AACR;AACAQ,MAAAA,UAAU,EAAEC,KAAK,CAACC,EAFV;AAGRC,MAAAA,KAAK,EAAEF,KAAK,CAACG;AAHL,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,EAOI;AAAK,IAAA,OAAO,EAAEL,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,eAAe,GAAG,UAAH,GAAgB,WADpC,CAPJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CAVJ,CADJ;AAoBH,CAvBD;;AAyBA,eAAeJ,MAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { ThemeContext } from '../contexts/ThemeContext';\nimport { AuthContext } from '../contexts/AuthContext';\nimport Loged from './Loged';\n\n// class Navbar extends Component {\n\n//     // contextType menentukan context mana yang dipakai\n//     // static contextType = ThemeContext\n\n//     render() {\n//         // dan akan menghasilkan sebuag object bernama context\n//         // console.log('context => ', this.context);\n\n//         // ini akan membuat sebuah variable baru sesuai dengan\n//         // yang ada di state file ThemeCOntext\n//         // const { isLightTheme, light, dark, user } = this.context\n\n//         // kita buat sebuah variable baru bernama theme\n//         // jika LightTheme true dan false\n//         // const theme = isLightTheme ? light : dark\n//         // variable theme akan berubah menjadi light atau dark\n//         // tergantung true atau falsenya\n\n//         return (\n\n//             <AuthContext.Consumer>{(authContext) => (\n\n//                 <ThemeContext.Consumer>{(themeContext) => {\n\n//                     const { isLightTheme, light, dark } = themeContext\n//                     const theme = isLightTheme ? light : dark\n//                     const { isAuthenticated, toggleAuth } = authContext\n\n//                     return (\n//                         <nav style={{\n//                             // bisa kita gunakan untuk display\n//                             background: theme.ui,\n//                             color: theme.syntax,\n\n//                         }}>\n//                             <h1>Context App</h1>\n//                             <div onClick={toggleAuth}>\n//                                 {isAuthenticated ? 'loged in' : 'loged Out'}\n//                             </div>\n//                             <ul>\n//                                 <li>Home</li>\n//                                 <li>About</li>\n//                                 <li>Contact</li>\n//                             </ul>\n\n//                             {/* <Loged /> */}\n//                         </nav>\n//                     )\n//                 }}\n//                 </ThemeContext.Consumer>\n//             )}\n\n\n//             </AuthContext.Consumer>\n\n\n//         );\n//     }\n// }\n\nconst Navbar = () => {\n    const { isLightTheme, light, dark } = useContext(ThemeContext)\n    const { isAuthenticated, toggleAuth } = useContext(AuthContext)\n    return (\n        <nav style={{\n            // bisa kita gunakan untuk display\n            background: theme.ui,\n            color: theme.syntax,\n\n        }}>\n            <h1>Context App</h1>\n            <div onClick={toggleAuth}>\n                {isAuthenticated ? 'loged in' : 'loged Out'}\n            </div>\n            <ul>\n                <li>Home</li>\n                <li>About</li>\n                <li>Contact</li>\n            </ul>\n\n            {/* <Loged /> */}\n        </nav>\n    );\n}\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}